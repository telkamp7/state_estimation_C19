setwd("C:/GIT/state_estimation_C19/")
# Load libraries
library(readr)
library(KFAS)
library(glmmTMB)
library(tidyr)
library(dplyr)
library(Matrix)
# Load processed data
newly_admitted <- read_rds(file = "./data/processed/processed_data.rds")
#### Total ####
# glmmTMB
m1.glmmTMB <- glmmTMB(formula = Total ~ -1 + ar1(drift + 0 | group),
family = poisson(link = "log"),
data = newly_admitted)
write_rds(x = m1.glmmTMB,
file = "./src/models/m1.glmmTMB.rds",
compress = "xz")
## KFAS
Zt <- matrix(c(1,0), 1, 2)
Tt <- matrix(c(1,0,1,1), 2, 2)
Rt <- matrix(c(1,0), 2, 1)
Qt <- matrix(NA)
P1inf <- diag(2)
mod1.KFAS <- SSModel(formula = Total ~ -1 +
SSMcustom(Z = Zt, T = Tt, R = Rt, Q = Qt, P1inf = P1inf),
distribution = "poisson", data = newly_admitted)
m1.KFAS <- fitSSM(mod1.KFAS, inits = c(1), method = "BFGS")
write_rds(x = m1.KFAS,
file = "./src/models/m1.KFAS.rds",
compress = "xz")
regional_newly_admitted <- read_rds(file = "./data/processed/processed_regional_data.rds")
# glmmTMB
m2.glmmTMB <- glmmTMB(formula = count ~ -1 + region + ar1(drift  + 0| region),
family = poisson(link = "log"),
data = regional_newly_admitted)
count_split <- split(regional_newly_admitted$count, regional_newly_admitted$region)
p <- length(count_split)
count <- matrix(unlist(count_split), ncol = p,
dimnames = list(NULL, names(count_split)))
dataf <- split(regional_newly_admitted, regional_newly_admitted$region)
mod2.KFAS <- SSModel(formula = count ~ -1 +
SSMregression(rformula = rep(list(~ region),p),
remove.intercept = FALSE,
type = "common",
data = dataf) +
SSMarima(ar = artransform(1)),
distribution = "poisson")
m2.KFAS <- fitSSM(model = mod2.KFAS,
inits = rep(1, p+1),
method = "BFGS")
tmp <- predict(m2.KFAS$model)
matplot(coef(object = KFS(model = m2.KFAS$model))[,7:12])
plot(tmp$Hovedstaden)
colMeans(count)
count
write_rds(x = m2.KFAS,
file = "./src/models/m2.KFAS.rds",
compress = "xz")
# Regional
m2.glmmTMB <- read_rds(file = "./src/models/m2.glmmTMB.rds")
m2.KFAS <- read_rds(file = "./src/models/m2.KFAS.rds")
tmp <- predict(object = m2.KFAS$model)
tmp
regional_pred <- regional_newly_admitted %>%
select(Dato, region) %>%
mutate(glmmTMB = exp(predict(m2.glmmTMB))) %>%
pivot_longer(cols = c(glmmTMB), names_to = "Model", values_to = "count")
regional_pred
tmp
library(tibble)
as_tibble_row(x = tmp)
as_tibble_col(x = tmp)
tmp2 <- as_tibble_col(x = tmp)
tmp2
str(tmp2)
names(tmp)
tmp2 <- as_tibble_col(x = tmp, column_name = names(tmp))
names(tmp)
tmp
tmp2 <- as_tibble_col(x = tmp, column_name = names(tmp))
tmp2
tmp2$Hovedstaden
tmp2
tmp2[1]
tmp2[2]
tmp2[2,]
tmp %>%
purrr::map_dfr(~ .x %>% as_tibble(), .id = "name")
regional_newly_admitted
tmp %>%
purrr::map_dfr(~ .x %>% as_tibble(), .id = "region")
library(purrr)
tmp2 <- tmp %>%
map_dfr(~ .x %>% as_tibble(), .id = "region")
tmp2
regional_newly_admitted
dates <- regional_newly_admitted$Dato
dates
regional_newly_admitted <- read_rds(file = "./data/processed/processed_regional_data.rds")
regional_newly_admitted
tmp2
dates
tmp2 <- tmp %>%
map_dfr(~ .x %>% as_tibble(), .id = "region") %>%
mutate(Dato = unique(dates))
tmp2 <- tmp %>%
map_dfr(~ .x %>% as_tibble(), .id = "region") %>%
mutate(Dato = rep(unique(dates),6))
tmp2
tmp
tmp2
regional_pred
tmp2 <- tmp %>%
map_dfr(~ .x %>% as_tibble(), .id = "region") %>%
mutate(Dato = rep(unique(dates),6), Model = "KFAS")
tmp2
tmp2 <- tmp %>%
map_dfr(~ .x %>% as_tibble(), .id = "region") %>%
mutate(Dato = rep(unique(dates),6), Model = "KFAS") %>% select(Dato, region, Model, fit = count)
tmp2 <- tmp %>%
map_dfr(~ .x %>% as_tibble(), .id = "region") %>%
mutate(Dato = rep(unique(dates),6), Model = "KFAS") %>%
select(Dato, region, Model, fit)
tmp2
tmp2 <- tmp %>%
map_dfr(~ .x %>% as_tibble(), .id = "region") %>%
rename(count = fit) %>%
mutate(Dato = rep(unique(dates),6), Model = "KFAS") %>%
select(Dato, region, Model, count)
tmp2
regional_pred
reg_pred_KFAS <- predict(object = m2.KFAS$model)
regional_pred_KFAS <- reg_pred_KFAS %>%
map_dfr(~ .x %>% as_tibble(), .id = "region") %>%
rename(count = fit) %>%
mutate(Dato = rep(unique(dates),6), Model = "KFAS") %>%
select(Dato, region, Model, count)
regional_pred_glmmTMB <- regional_newly_admitted %>%
select(Dato, region) %>%
mutate(glmmTMB = exp(predict(m2.glmmTMB))) %>%
pivot_longer(cols = c(glmmTMB), names_to = "Model", values_to = "count")
regional_pred <- bind_rows(regional_pred_KFAS, regional_pred_glmmTMB)
regional_pred
admitted_reg_pred_plot <- admitted_reg_plot +
geom_line(data = regional_pred, mapping = aes(x = Dato, y = count, colour = Model, linetype = Model), size = .8) +
facet_wrap(facets = vars(region), nrow = 2, ncol = 3) +
scale_color_brewer(palette = "Paired")
# Number of admissions separated into regions
admitted_reg_plot <- ggplot(data = regional_newly_admitted, mapping = aes(x = Dato, y = count)) +
geom_point() +
facet_wrap(facets = vars(region), nrow = 2, ncol = 3) +
labs(x = "Date [Days]", y = "Newly admitted [#]") +
theme_bw()
# Load libraries
library(readr)
library(KFAS)
library(glmmTMB)
library(tidyr)
library(dplyr)
library(purrr)
library(ggplot2)
library(RColorBrewer)
library(purrr)
# Load processed data
newly_admitted <- read_rds(file = "./data/processed/processed_data.rds")
regional_newly_admitted <- read_rds(file = "./data/processed/processed_regional_data.rds")
# Number of admissions in total
admitted_plot <- newly_admitted %>%
ggplot(mapping = aes(x = Dato, y = Total)) +
geom_point() +
labs(x = "Date [Days]", y = "Newly admitted [#]") +
theme_bw()
ggsave(plot = admitted_plot,
filename = "./reports/figures/newly_admitted_total.png",
dpi = "retina", width = 8, height = 4, units = "in")
# Number of admissions separated into regions
admitted_reg_plot <- ggplot(data = regional_newly_admitted, mapping = aes(x = Dato, y = count)) +
geom_point() +
facet_wrap(facets = vars(region), nrow = 2, ncol = 3) +
labs(x = "Date [Days]", y = "Newly admitted [#]") +
theme_bw()
ggsave(plot = admitted_reg_plot,
filename = "./reports/figures/newly_admitted_regions.png",
dpi = "retina", width = 12, height = 8, units = "in")
# Total
m1.glmmTMB <- read_rds(file = "./src/models/m1.glmmTMB.rds")
m1.KFAS <- read_rds(file = "./src/models/m1.KFAS.rds")
mod.pred <- newly_admitted %>%
mutate(glmmTMB = exp(predict(m1.glmmTMB)), KFAS = predict(m1.KFAS$model)[,"fit"]) %>%
select(Dato, glmmTMB, KFAS) %>%
pivot_longer(cols = c(glmmTMB, KFAS), names_to = "Model", values_to = "Prediction")
admitted_pred_plot <- admitted_plot +
geom_line(data = mod.pred, mapping = aes(x = Dato, y = Prediction, colour = Model, linetype = Model), size = .8) +
scale_color_brewer(palette = "Paired")
ggsave(plot = admitted_pred_plot,
filename = "./reports/figures/admitted_pred_plot.png",
dpi = "retina", width = 8, height = 4, units = "in")
ranef.mod <- newly_admitted %>%
mutate(glmmTMB = unlist(ranef(object = m1.glmmTMB)$cond$group),
KFAS = coef(object = KFS(model = m1.KFAS$model))[,1]) %>%
select(Dato, glmmTMB, KFAS) %>%
pivot_longer(cols = -Dato, names_to = "Model", values_to = "Ranef")
latent_state_plot <- ggplot(data = ranef.mod, mapping = aes(x = Dato, y = Ranef, colour = Model, linetype = Model)) +
geom_line(size = .8) +
scale_color_brewer(palette = "Paired") +
labs(x = "Date [days]", y = expression(paste("Latent intensity, ", lambda))) +
theme_bw()
ggsave(plot = latent_state_plot,
filename = "./reports/figures/latent_state_plot.png",
dpi = "retina", width = 8, height = 4, units = "in")
# Regional
m2.glmmTMB <- read_rds(file = "./src/models/m2.glmmTMB.rds")
m2.KFAS <- read_rds(file = "./src/models/m2.KFAS.rds")
dates <- regional_newly_admitted$Dato
reg_pred_KFAS <- predict(object = m2.KFAS$model)
regional_pred_KFAS <- reg_pred_KFAS %>%
map_dfr(~ .x %>% as_tibble(), .id = "region") %>%
rename(count = fit) %>%
mutate(Dato = rep(unique(dates),6), Model = "KFAS") %>%
select(Dato, region, Model, count)
regional_pred_glmmTMB <- regional_newly_admitted %>%
select(Dato, region) %>%
mutate(glmmTMB = exp(predict(m2.glmmTMB))) %>%
pivot_longer(cols = c(glmmTMB), names_to = "Model", values_to = "count")
regional_pred <- bind_rows(regional_pred_KFAS, regional_pred_glmmTMB)
admitted_reg_pred_plot <- admitted_reg_plot +
geom_line(data = regional_pred, mapping = aes(x = Dato, y = count, colour = Model, linetype = Model), size = .8) +
facet_wrap(facets = vars(region), nrow = 2, ncol = 3) +
scale_color_brewer(palette = "Paired")
admitted_reg_pred_plot
regional_pred
regional_pred %>%
pivot_wider(names_from = c(region, model),
names_sep = ".",
values_from = count)
regional_pred %>%
pivot_wider(names_from = c(region, Model),
names_sep = ".",
values_from = count)
test <- regional_pred %>%
pivot_wider(names_from = c(region, Model),
names_sep = ".",
values_from = count)
View(test)
regional_pred_KFAS
regional_pred_glmmTMB
m2.glmmTMB
m2.KFAS
logLik(m2.KFAS)
logLik(m2.glmmTMB)
m2.KFAS$model
logLik(m2.KFAS$model)
AIC(m2.KFAS$model)
AIC(m2.glmmTMB)
summary(m2.glmmTMB)
summary(m2.KFAS)
summary(m2.KFAS$model)
m2.glmmTMB
resid(m2.glmmTMB)
plot(resid(m2.glmmTMB))
acf(resid(m2.glmmTMB))
cpgram(resid(m2.glmmTMB))
predict(m2.KFAS$model)[,"fit"]
predict(m2.KFAS$model)
predict(m2.KFAS$model)[,]
predict(m2.KFAS$model)[1,]
predict(m2.KFAS$model)[,1]
ranef(object = m2.glmmTMB)
ranef(object = m2.glmmTMB)
ranef.mod <- newly_admitted %>%
mutate(glmmTMB = unlist(ranef(object = m2.glmmTMB)$cond$group)) %>%
select(Dato, glmmTMB) %>%
pivot_longer(cols = -Dato, names_to = "Model", values_to = "Ranef")
newly_admitted %>%
mutate(glmmTMB = unlist(ranef(object = m2.glmmTMB)$cond$group)) %>%
select(Dato, glmmTMB)
newly_admitted %>%
mutate(glmmTMB = unlist(ranef(object = m2.glmmTMB)$cond$group))
unlist(ranef(object = m2.glmmTMB)$cond$group)
ranef(object = m2.glmmTMB)$cond$group)
ranef(object = m2.glmmTMB)
ranef(object = m2.glmmTMB)$cond$group
ranef(object = m2.glmmTMB)$cond
ranef(object = m2.glmmTMB)$cond$Dato
ranef(object = m2.glmmTMB)$cond$Hovedstaden
ranef(object = m2.glmmTMB)
length(ranef(object = m2.glmmTMB))
nrow(ranef(object = m2.glmmTMB))
ranef(object = m2.glmmTMB)
test <- ranef(object = m2.glmmTMB)
View(test)
test <- ranef(object = m2.glmmTMB)$cond$regiom
test <- ranef(object = m2.glmmTMB)$cond$region
View(test)
test <- t(ranef(object = m2.glmmTMB)$cond$region)
test
fixef(m2.glmmTMB)
library(effects)
install.packages("effects")
install.packages("broom.mixed")
library(broom)
library(broom.mixed)
t1 <- tidy(m2.glmmTMB, conf.int = TRUE)
install.packages("dotwhisker")
install.packages("dotwhisker")
install.packages("dotwhisker")
install.packages("dotwhisker")
# Load libraries
library(broom)
library(broom.mixed)
library(readr)
library(KFAS)
