m1.out.KFAS
tmp <- print(m1.out.KFAS)
tmp
print.KFS
m1.out.KFAS
m1.out.KFAS$model
m1.out.KFAS$model$y
m1.out.KFAS$model$Z
m1.out.KFAS$model$H
m1.out.KFAS$model$T
m1.out.KFAS$model$R
m1.out.KFAS$model$Q
m1.out.KFAS$model$a1
m1.out.KFAS$model$P1
m1.out.KFAS$model$P1inf
m1.out.KFAS$model$u
m1.out.KFAS
m1.out.KFAS$all_gaussian
m1.out.KFAS$dims
m1.out.KFAS$a
tail(m1.out.KFAS$a)
m1.out.KFAS$P
n
n <- nrow(newly_admitted)
n
m1.out.KFAS$P[1,1,n]
m1.out.KFAS$P[,,n]
tmp <- m1.out.KFAS$P
tmp
tmp[,,981]
m1.out.KFAS
sqrt(0.0004037125 )
m1.out.KFAS$P_theta
m1.out.KFAS$P_mu
m1.out.KFAS$V
m1.out.KFAS$V[,,n]
sqrt(0.0003810261 )
m1.out.KFAS
m1.out.KFAS$V[1,1,n]
KFAS.beta <- paste0(round(sqrt(m1.out.KFAS$V[1,1,n])))
KFAS.beta
KFAS.beta <- paste0(round(sqrt(m1.out.KFAS$V[1,1,n]), 2))
KFAS.beta
m1.out.KFAS$V_mu
m1.out.KFAS$V_mu[,,981]
m1.out.KFAS
paste0(round(sqrt(m1.out.KFAS$V[1,1,n]), 2))
coef(object = m1.out.KFAS, last = TRUE)
KFAS.beta <- paste0(as.numeric(coef(object = m1.out.KFAS, last = TRUE)[1]),
" (", round(sqrt(m1.out.KFAS$V[1,1,n]), 2),")")
KFAS.beta
KFAS.beta <- paste0(round(as.numeric(coef(object = m1.out.KFAS, last = TRUE)[1]), 2),
" (", round(sqrt(m1.out.KFAS$V[1,1,n]), 2),")")
KFAS.beta
coef(object = m1.out.KFAS, last = TRUE)[1])
coef(object = m1.out.KFAS, last = TRUE)[1]
m2.glmmTMB <- read_rds(file = "./src/models/m2.glmmTMB.rds")
m2.KFAS <- read_rds(file = "./src/models/m2.KFAS.rds")
m2.out.KFAS <- read_rds(file = "./src/models/m2.out.KFAS.rds")
as.numeric(fixef(object = m2.glmmTMB)$cond)
glmmTMB.reg.summary <- summary(m2.glmmTMB)
glmmTMB.reg.summary
round(glmmTMB.reg.summary$coefficients$cond[2],2)
glmmTMB.reg.summary$coefficients$cond
round(glmmTMB.reg.summary$coefficients$cond[,2],2)
round(glmmTMB.reg.summary$coefficients$cond[,2],digits)
# Number of decimals
digits <- 2
round(glmmTMB.reg.summary$coefficients$cond[,2],digits)
glmmTMB.reg.beta <- paste0(glmmTMB.reg.summary$coefficients$cond[,1],
" (",round(glmmTMB.reg.summary$coefficients$cond[,2],digits),
")")
glmmTMB.reg.beta
glmmTMB.reg.beta <- paste0(round(glmmTMB.reg.summary$coefficients$cond[,1],digits),
" (",round(glmmTMB.reg.summary$coefficients$cond[,2],digits),
")")
glmmTMB.reg.beta
glmmTMB.reg.beta <- paste0(round(glmmTMB.reg.summary$coefficients$cond[,1],digits)," (",
round(glmmTMB.reg.summary$coefficients$cond[,2],digits),")")
m2.out.KFAS
coef(object = m2.out.KFAS, last = TRUE)[1]
coef(object = m2.out.KFAS, last = TRUE)[1:6]
as.numeric(coef(object = m2.out.KFAS, last = TRUE)[1:6])
round(as.numeric(coef(object = m2.out.KFAS, last = TRUE)[1:6]), digits)
m2.out.KFAS$V
m2.out.KFAS
m2.out.KFAS$v[,,N]
m2.out.KFAS$v[,,n]
m2.out.KFAS$V[,,n]
sqrt(6.451565e-04)
sqrt(0.0006758336)
diag(m2.out.KFAS$V[,,n])
sqrt(diag(m2.out.KFAS$V[,,n]))
m2.out.KFAS
round(sqrt(diag(m2.out.KFAS$V[,,n])),digits)
round(sqrt(diag(m2.out.KFAS$V[,,n])),3)
round(sqrt(diag(m2.out.KFAS$V[,,n])),3)[1:6]
#### Regional ####
# Set theme for regional plots
theme_set(
theme_bw() +
theme(axis.title = element_text(size = 18),
axis.text = element_text(size = 15),
strip.text = element_text(size = 18),
legend.title = element_blank(),
legend.text = element_text(size = 18),
legend.key.size = unit(x = 2, units = "line"),
legend.position = "top")
)
# Load processed data
regional_newly_admitted <- read_rds(file = "./data/processed/processed_regional_data.rds")
# Number of admissions separated into regions
admitted_reg_plot <- ggplot(data = regional_newly_admitted, mapping = aes(x = Dato, y = count)) +
geom_point() +
facet_wrap(facets = vars(region), nrow = 2, ncol = 3) +
scale_x_date(name = "Date [Days]", date_breaks = "9 months", date_labels = "%Y-%m") +
labs(y = "Newly admitted [#]")
ggsave(plot = admitted_reg_plot,
filename = "./reports/figures/newly_admitted_regions.png",
dpi = "retina", width = 12, height = 8, units = "in")
m2.glmmTMB <- read_rds(file = "./src/models/m2.glmmTMB.rds")
m2.KFAS <- read_rds(file = "./src/models/m2.KFAS.rds")
m2.out.KFAS <- read_rds(file = "./src/models/m2.out.KFAS.rds")
# Collect predictions from KFAS
mod.pred.regional.KFAS <- newly_admitted %>%
mutate(KFAS.Hovedstaden = m2.out.KFAS$muhat[,1],
KFAS.Midtjylland = m2.out.KFAS$muhat[,2],
KFAS.Nordjylland = m2.out.KFAS$muhat[,3],
KFAS.Sjælland = m2.out.KFAS$muhat[,4],
# Collect prediction from glmmTMB
mod.pred.regional.glmmTMB <- regional_newly_admitted %>%
select(Dato, region) %>%
mutate(glmmTMB = predict(object = m2.glmmTMB, type = "response")) %>%
pivot_longer(cols = c(glmmTMB), names_to = "Model", values_to = "count") %>%
select(Dato, Model, region, count)
# Gather all in one tibble
mod.pred.regional <- bind_rows(mod.pred.regional.KFAS, mod.pred.regional.glmmTMB)
# Predictions
admitted_reg_pred_plot <- admitted_reg_plot +
geom_line(data = mod.pred.regional, mapping = aes(x = Dato, y = count, colour = Model, linetype = Model), linewidth = .8) +
facet_wrap(facets = vars(region), nrow = 2, ncol = 3) +
scale_color_brewer(palette = "Paired")
ggsave(plot = admitted_reg_pred_plot,
filename = "./reports/figures/admitted_reg_pred_plot.png",
dpi = "retina", width = 12, height = 8, units = "in")
# Random effects
ranef.glmmTMB.regional <- t(ranef(object = m2.glmmTMB)$cond$region)
mod.ranef.regional <- newly_admitted %>%
select(Dato) %>%
mutate(glmmTMB.Hovedstaden = ranef.glmmTMB.regional[,1],
glmmTMB.Midtjylland = ranef.glmmTMB.regional[,2],
glmmTMB.Nordjylland = ranef.glmmTMB.regional[,3],
glmmTMB.Sjælland = ranef.glmmTMB.regional[,4],
# Latent state
latent_state_reg_plot <- ggplot(data = mod.ranef.regional, aes(x = Dato, y = count, colour = Model, linetype = Model)) +
geom_line(linewidth = .8) +
facet_wrap(facets = vars(region)) +
scale_color_brewer(palette = "Paired") +
scale_x_date(name = "Date [Days]", date_breaks = "9 months", date_labels = "%Y-%m") +
labs(y = expression(paste("Random effect, ", u[t]^r)))
ggsave(plot = latent_state_reg_plot,
filename = "./reports/figures/latent_state_reg_plot.png",
dpi = "retina", width = 12, height = 8, units = "in")
# Residuals
m2.res.KFAS <- residuals(m2.out.KFAS, type = "response")
mod.res.regional.KFAS <- newly_admitted %>%
mutate(KFAS.Hovedstaden = m2.res.KFAS[,1],
KFAS.Midtjylland = m2.res.KFAS[,2],
KFAS.Nordjylland = m2.res.KFAS[,3],
KFAS.Sjælland = m2.res.KFAS[,4],
mod.res.regional.KFAS <- newly_admitted %>%
mutate(KFAS.Hovedstaden = m2.res.KFAS[,1],
KFAS.Midtjylland = m2.res.KFAS[,2],
KFAS.Nordjylland = m2.res.KFAS[,3],
KFAS.Sjælland = m2.res.KFAS[,4],
mod.res.regional.KFAS <- newly_admitted %>%
mutate(KFAS.Hovedstaden = m2.res.KFAS[,1],
KFAS.Midtjylland = m2.res.KFAS[,2],
KFAS.Nordjylland = m2.res.KFAS[,3],
`KFAS.Sjælland` = m2.res.KFAS[,4],
KFAS.Syddanmark = m2.res.KFAS[,5],
`KFAS.Ukendt Region` = m2.res.KFAS[,6]) %>%
select(Dato, KFAS.Hovedstaden:`KFAS.Ukendt Region`) %>%
pivot_longer(cols = KFAS.Hovedstaden:`KFAS.Ukendt Region`,
names_sep = "\\.",
names_to = c("Model", "region"),
values_to = "residual")
mod.res.regional.KFAS
# Load processed data
regional_newly_admitted <- read_rds(file = "./data/processed/processed_regional_data.rds")
regional_newly_admitted
mod.res.regional.KFAS <- newly_admitted %>%
mutate(KFAS.Hovedstaden = m2.res.KFAS[,1],
KFAS.Midtjylland = m2.res.KFAS[,2],
KFAS.Nordjylland = m2.res.KFAS[,3],
KFAS.Sjælland = m2.res.KFAS[,4],
mod.res.regional.KFAS
# Collect residuals from glmmTMB
mod.res.regional.glmmTMB <- regional_newly_admitted %>%
select(Dato, region) %>%
mutate(glmmTMB = residuals(m2.glmmTMB, type = "response")) %>%
pivot_longer(cols = c(glmmTMB), names_to = "Model", values_to = "residual") %>%
select(Dato, Model, region, residual)
mod.res.regional.glmmTMB
# Gather all in one tibble
mod.res.regional <- bind_rows(mod.res.regional.glmmTMB,mod.res.regional.KFAS)
mod.res.regional
histogram_residual_reg_plot <-
ggplot(data = mod.res.regional, mapping = aes(x = residual, colour = Model)) +
geom_histogram() +
facet_wrap(facets = vars(region))
histogram_residual_reg_plot <-
ggplot(data = mod.res.regional, mapping = aes(x = residual, colour = Model)) +
geom_histogram() +
facet_wrap(facets = vars(region)) +
scale_color_brewer(palette = "Paired")
histogram_residual_reg_plot
histogram_residual_reg_plot <-
ggplot(data = mod.res.regional, mapping = aes(x = residual, fill = Model)) +
geom_histogram() +
facet_wrap(facets = vars(region)) +
scale_fill_brewer(palette = "Paired")
histogram_residual_reg_plot
histogram_residual_reg_plot <-
ggplot(data = mod.res.regional, mapping = aes(x = residual, fill = Model)) +
geom_histogram() +
facet_wrap(facets = vars(region), scales = "free_y") +
scale_fill_brewer(palette = "Paired")
histogram_residual_reg_plot
histogram_residual_reg_plot <-
ggplot(data = mod.res.regional, mapping = aes(x = residual, fill = Model)) +
geom_histogram() +
facet_wrap(facets = vars(region)) +
scale_fill_brewer(palette = "Paired")
histogram_residual_reg_plot
histogram_residual_reg_plot <-
ggplot(data = mod.res.regional, mapping = aes(x = residual, fill = Model)) +
geom_histogram() +
facet_wrap(facets = vars(region)) +
scale_fill_brewer(palette = "Paired")+
labs(x = "Residuals [#]")
histogram_residual_reg_plot
ggsave(plot = histogram_residual_reg_plot,
filename = "./reports/figures/histogram_residual_reg_plot.png",
dpi = "retina", width = 12, height = 8, units = "in")
qq_residual_reg_plot <- ggplot(data = mod.res.regional, mapping = aes(sample = residual, colour = Model)) +
stat_qq()+ stat_qq_line(linewidth = 1.2) +
facet_wrap(facets = vars(region)) +
scale_color_brewer(palette = "Paired") +
labs(x = "Theoretical Quantiles", y = "Sample Quantiles")
qq_residual_reg_plot
ggsave(plot = qq_residual_reg_plot,
filename = "./reports/figures/qq_residual_reg_plot.png",
dpi = "retina", width = 8, height = 4, units = "in")
mod.res.regional
mod.res.regional %>%
pivot_wider(names_from = Model, values_from = residual)
mod.ACF.reg <- mod.res.regional %>%
pivot_wider(names_from = Model, values_from = residual) %>%
select(glmmTMB, KFAS) %>%
ggAcf(plot = FALSE) %>%
map(~ as_tibble(.x))
mod.ACF.reg
mod.res.regional %>%
pivot_wider(names_from = Model, values_from = residual)
mod.res.regional %>%
pivot_wider(names_from = c(region,Model), values_from = residual)
mod.res.regional
mod.ACF.reg <- mod.res.regional %>%
pivot_wider(names_from = c(region,Model), values_from = residual) %>%
select(-Dato) %>%
ggAcf(plot = FALSE) %>%
map(~ as_tibble(.x))
mod.ACF.reg
mod.ACF.reg$acf
mod.ACF.reg$acf %>%
select(V1, V14)
mod.ACF.reg$acf %>%
select(V1, V14,V27)
mod.ACF.reg$acf %>%
select(V1, V14,V27,V40)
mod.ACF.reg$acf %>%
select(V1, V14,V27,V40,V57)
mod.ACF.reg$acf %>%
select(V1, V14,V27,V40,V53)
mod.ACF.reg$acf %>%
select(V1, V14,V27, V40, V53, V66)
mod.ACF.reg$acf
colnames(mod.ACF.reg$acf)
144/14
143/14
144/13
143/13
mod.ACF.reg
144/12
mod.ACF.reg$acf %>%
select(V1, V14,V27, V40, V53, V66)
seq(1,144,12)
seq(from = 1, to = 144, by = 13)
mod.ACF.reg$acf %>%
select(ends_with(seq(from = 1, to = 144, by = 13)))
mod.ACF.reg$acf %>%
select(ends_with(as.character(seq(from = 1, to = 144, by = 13))))
seq(from = 1, to = 144, by = 13)
as.character(seq(from = 1, to = 144, by = 13))
ends_with(as.character(seq(from = 1, to = 144, by = 13)))
paste0("V",seq(from = 1, to = 144, by = 13))
mod.ACF.reg$acf %>%
select(matches(paste0("V",seq(from = 1, to = 144, by = 13))))
mod.ACF.reg$acf %>%
select(ends_with(paste0("V",seq(from = 1, to = 144, by = 13))))
mod.ACF.reg
mod.ACF.reg$snames
ACF_residual_plot <- mod.ACF.reg$acf %>%
select(ends_with(paste0("V",seq(from = 1, to = 144, by = 13)))) %>%
mutate(Lag = 0:26)
mod.ACF.reg
ACF_residual_plot <- mod.ACF.reg$acf %>%
select(ends_with(paste0("V",seq(from = 1, to = 144, by = 13)))) %>%
mutate(Lag = 0:20)
mod.ACF.reg$acf %>%
select(ends_with(paste0("V",seq(from = 1, to = 144, by = 13)))) %>%
mutate(Lag = 0:19)
ACF_residual_plot <- mod.ACF.reg$acf %>%
select(ends_with(paste0("V",seq(from = 1, to = 144, by = 13)))) %>%
mutate(Lag = 0:19)
colnames(ACF_residual_plot) <- mod.ACF.reg$snames
ACF_residual_plot
mod.ACF.reg$snames
colnames(ACF_residual_plot) <- t(mod.ACF.reg$snames)
ACF_residual_plot
ACF_residual_plot <- mod.ACF.reg$acf %>%
select(ends_with(paste0("V",seq(from = 1, to = 144, by = 13)))) %>%
mutate(Lag = 0:19)
colnames(ACF_residual_plot)[1:12] <- t(mod.ACF.reg$snames)
ACF_residual_plot
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "Residual")
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model)) +
facet_wrap(facets = vars(Region))
mod.ACF
ACF_residual_plot
mod.ACF.reg
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model)) +
geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
lty = c("solid", "dashed", "dashed"),
col = c("black", "blue", "blue")) +
facet_wrap(facets = vars(Region))
pivot_longer(cols = c(glmmTMB, KFAS), names_to = "Model", values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model), linewidth = 2) +
geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(tmp2$n.used)),
lty = c("solid", "dashed", "dashed"),
col = c("black", "blue", "blue"))
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model)) +
geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
lty = c("solid", "dashed", "dashed"),
col = c("black", "blue", "blue")) +
facet_wrap(facets = vars(Region))
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model)) +
geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
lty = c("solid", "dashed", "dashed"),
col = c("black", "blue", "blue"))
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model)) +
geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
lty = c("solid", "dashed", "dashed"),
col = c("black", "blue", "blue")) +
facet_wrap(facets = vars(Region))
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model)) +
geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
lty = c("solid", "dashed", "dashed"),
col = c("black", "blue", "blue"))
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model)) +
facet_wrap(facets = vars(Region))
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model)) +
facet_wrap(facets = vars(Region)) +
geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
lty = c("solid", "dashed", "dashed"),
col = c("black", "blue", "blue"))
CF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model)) +
geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
lty = c("solid", "dashed", "dashed"),
col = c("black", "blue", "blue"))
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model)) +
geom_hline(yintercept = 0) +
# geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
#            lty = c("solid", "dashed", "dashed"),
#            col = c("black", "blue", "blue")) +
facet_wrap(facets = vars(Region))
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model)) +
geom_hline(yintercept = c(0, -1.96)) +
# geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
#            lty = c("solid", "dashed", "dashed"),
#            col = c("black", "blue", "blue")) +
facet_wrap(facets = vars(Region))
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model)) +
geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used))) +
# geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
#            lty = c("solid", "dashed", "dashed"),
#            col = c("black", "blue", "blue")) +
facet_wrap(facets = vars(Region))
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model)) +
geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
lty = c("solid", "dashed", "dashed")) +
# geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
#            lty = c("solid", "dashed", "dashed"),
#            col = c("black", "blue", "blue")) +
facet_wrap(facets = vars(Region))
rep(c("solid", "dashed", "dashed"),6)
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model)) +
geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
lty = rep(c("solid", "dashed", "dashed"),6)) +
# geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
#            lty = c("solid", "dashed", "dashed"),
#            col = c("black", "blue", "blue")) +
facet_wrap(facets = vars(Region))
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model)) +
geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
lty = rep(c("solid", "dashed", "dashed"),6),
col = rep(c("black", "blue", "blue"),6)) +
# geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
#            lty = c("solid", "dashed", "dashed"),
#            col = c("black", "blue", "blue")) +
facet_wrap(facets = vars(Region))
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model)) +
geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
lty = rep(c("solid", "dashed", "dashed"),6),
col = rep(c("black", "blue", "blue"),6)) +
facet_wrap(facets = vars(Region)) +
scale_colour_brewer(palette = "Paired") +
labs(y = "ACF")
ACF_residual_plot %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model), linewidth = 2) +
geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
lty = rep(c("solid", "dashed", "dashed"),6),
col = rep(c("black", "blue", "blue"),6)) +
facet_wrap(facets = vars(Region)) +
scale_colour_brewer(palette = "Paired") +
labs(y = "ACF")
mod.ACF.reg <- mod.res.regional %>%
pivot_wider(names_from = c(region,Model), values_from = residual) %>%
select(-Dato) %>%
ggAcf(plot = FALSE) %>%
map(~ as_tibble(.x))
mod.ACF.unfold.reg <- mod.ACF.reg$acf %>%
select(ends_with(paste0("V",seq(from = 1, to = 144, by = 13)))) %>%
mutate(Lag = 0:19)
colnames(mod.ACF.unfold.reg)[1:12] <- t(mod.ACF.reg$snames)
ACF_residual_reg_plot <- mod.ACF.unfold.reg %>%
pivot_longer(cols = -Lag, names_sep = "_", names_to = c("Region", "Model"), values_to = "ACF") %>%
ggplot() +
geom_segment(mapping = aes(x = Lag, xend = Lag, y = 0, yend = ACF, colour = Model), linewidth = 2) +
geom_hline(yintercept = c(0, -1.96, 1.96) / sqrt(as.numeric(mod.ACF.reg$n.used)),
lty = rep(c("solid", "dashed", "dashed"),6),
col = rep(c("black", "blue", "blue"),6)) +
facet_wrap(facets = vars(Region)) +
scale_colour_brewer(palette = "Paired") +
labs(y = "ACF")
ACF_residual_reg_plot
ggsave(plot = ACF_residual_reg_plot,
filename = "./reports/figures/ACF_residual_reg_plot.png",
dpi = "retina", width = 12, height = 8, units = "in")
